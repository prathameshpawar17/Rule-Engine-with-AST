{"ast":null,"code":"var _jsxFileName = \"P:\\\\company's\\\\Zeotop\\\\rule_engine\\\\frontend\\\\src\\\\components\\\\RuleModifier.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { modifyRule } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RuleModifier = () => {\n  _s();\n  const [ruleId, setRuleId] = useState('');\n  const [path, setPath] = useState('');\n  const [newValue, setNewValue] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const pathArray = path.split('.').filter(Boolean);\n      await modifyRule(ruleId, pathArray, newValue);\n      alert('Rule modified successfully!');\n    } catch (error) {\n      alert('Error modifying rule: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: ruleId,\n      onChange: e => setRuleId(e.target.value),\n      placeholder: \"Rule ID\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: path,\n      onChange: e => setPath(e.target.value),\n      placeholder: \"Path (e.g., left.right.value)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newValue,\n      onChange: e => setNewValue(e.target.value),\n      placeholder: \"New Value\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Modify Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(RuleModifier, \"qV7IWEFG3VHM3GtBLuvolwHd728=\");\n_c = RuleModifier;\nexport default RuleModifier;\nvar _c;\n$RefreshReg$(_c, \"RuleModifier\");","map":{"version":3,"names":["React","useState","modifyRule","jsxDEV","_jsxDEV","RuleModifier","_s","ruleId","setRuleId","path","setPath","newValue","setNewValue","handleSubmit","e","preventDefault","pathArray","split","filter","Boolean","alert","error","message","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["P:/company's/Zeotop/rule_engine/frontend/src/components/RuleModifier.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { modifyRule } from '../services/api';\r\n\r\nconst RuleModifier = () => {\r\n  const [ruleId, setRuleId] = useState('');\r\n  const [path, setPath] = useState('');\r\n  const [newValue, setNewValue] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const pathArray = path.split('.').filter(Boolean);\r\n      await modifyRule(ruleId, pathArray, newValue);\r\n      alert('Rule modified successfully!');\r\n    } catch (error) {\r\n      alert('Error modifying rule: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"number\"\r\n        value={ruleId}\r\n        onChange={(e) => setRuleId(e.target.value)}\r\n        placeholder=\"Rule ID\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={path}\r\n        onChange={(e) => setPath(e.target.value)}\r\n        placeholder=\"Path (e.g., left.right.value)\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={newValue}\r\n        onChange={(e) => setNewValue(e.target.value)}\r\n        placeholder=\"New Value\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Modify Rule</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RuleModifier;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,SAAS,GAAGP,IAAI,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;MACjD,MAAMjB,UAAU,CAACK,MAAM,EAAES,SAAS,EAAEL,QAAQ,CAAC;MAC7CS,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdD,KAAK,CAAC,wBAAwB,GAAGC,KAAK,CAACC,OAAO,CAAC;IACjD;EACF,CAAC;EAED,oBACElB,OAAA;IAAMmB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBAC3BpB,OAAA;MACEqB,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEnB,MAAO;MACdoB,QAAQ,EAAGb,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;MAC3CG,WAAW,EAAC,SAAS;MACrBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF9B,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGb,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC,+BAA+B;MAC3CC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF9B,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,QAAS;MAChBgB,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,WAAW;MACvBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF9B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAC5B,EAAA,CA1CID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
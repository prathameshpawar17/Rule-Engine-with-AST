{"ast":null,"code":"var _jsxFileName = \"P:\\\\company's\\\\Zeotop\\\\rule_engine\\\\frontend\\\\src\\\\components\\\\RuleCombiner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { combineRules } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RuleCombiner = () => {\n  _s();\n  const [ruleIds, setRuleIds] = useState('');\n  const [combinedRule, setCombinedRule] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const ids = ruleIds.split(',').map(id => parseInt(id.trim()));\n      const result = await combineRules(ids);\n      setCombinedRule(result);\n    } catch (error) {\n      alert('Error combining rules: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ruleIds,\n      onChange: e => setRuleIds(e.target.value),\n      placeholder: \"Rule IDs (comma-separated)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), combinedRule && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Combined Rule:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(combinedRule, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RuleCombiner, \"NQM4lWYInjOIUZ5srFeaClwu4nM=\");\n_c = RuleCombiner;\nexport default RuleCombiner;\nvar _c;\n$RefreshReg$(_c, \"RuleCombiner\");","map":{"version":3,"names":["React","useState","combineRules","jsxDEV","_jsxDEV","RuleCombiner","_s","ruleIds","setRuleIds","combinedRule","setCombinedRule","handleSubmit","e","preventDefault","ids","split","map","id","parseInt","trim","result","error","alert","message","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["P:/company's/Zeotop/rule_engine/frontend/src/components/RuleCombiner.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { combineRules } from '../services/api';\r\n\r\nconst RuleCombiner = () => {\r\n  const [ruleIds, setRuleIds] = useState('');\r\n  const [combinedRule, setCombinedRule] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const ids = ruleIds.split(',').map(id => parseInt(id.trim()));\r\n      const result = await combineRules(ids);\r\n      setCombinedRule(result);\r\n    } catch (error) {\r\n      alert('Error combining rules: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={ruleIds}\r\n        onChange={(e) => setRuleIds(e.target.value)}\r\n        placeholder=\"Rule IDs (comma-separated)\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Combine Rules</button>\r\n      {combinedRule && (\r\n        <div>\r\n          <h3>Combined Rule:</h3>\r\n          <pre>{JSON.stringify(combinedRule, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RuleCombiner;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAGP,OAAO,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,EAAE,IAAIC,QAAQ,CAACD,EAAE,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7D,MAAMC,MAAM,GAAG,MAAMlB,YAAY,CAACY,GAAG,CAAC;MACtCJ,eAAe,CAACU,MAAM,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,KAAK,CAAC,yBAAyB,GAAGD,KAAK,CAACE,OAAO,CAAC;IAClD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAMoB,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBAC3BrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,OAAQ;MACfqB,QAAQ,EAAGhB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC,4BAA4B;MACxCC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF/B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3C1B,YAAY,iBACXL,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/B,OAAA;QAAAqB,QAAA,EAAMW,IAAI,CAACC,SAAS,CAAC5B,YAAY,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX,CAAC;AAAC7B,EAAA,CAjCID,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"P:\\\\company's\\\\Zeotop\\\\rule_engine\\\\frontend\\\\src\\\\components\\\\RuleList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getRules } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RuleList = () => {\n  _s();\n  const [rules, setRules] = useState([]);\n  useEffect(() => {\n    const fetchRules = async () => {\n      try {\n        const fetchedRules = await getRules();\n        setRules(fetchedRules);\n      } catch (error) {\n        console.error('Error fetching rules:', error);\n      }\n    };\n    fetchRules();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: rules.map(rule => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: rule.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), \": \", rule.description]\n    }, rule.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RuleList, \"sTtk373PZ75lT1TKxmJpkKbdr00=\");\n_c = RuleList;\nexport default RuleList;\nvar _c;\n$RefreshReg$(_c, \"RuleList\");","map":{"version":3,"names":["React","useState","useEffect","getRules","jsxDEV","_jsxDEV","RuleList","_s","rules","setRules","fetchRules","fetchedRules","error","console","children","map","rule","name","fileName","_jsxFileName","lineNumber","columnNumber","description","id","_c","$RefreshReg$"],"sources":["P:/company's/Zeotop/rule_engine/frontend/src/components/RuleList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getRules } from '../services/api';\r\n\r\nconst RuleList = () => {\r\n  const [rules, setRules] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRules = async () => {\r\n      try {\r\n        const fetchedRules = await getRules();\r\n        setRules(fetchedRules);\r\n      } catch (error) {\r\n        console.error('Error fetching rules:', error);\r\n      }\r\n    };\r\n    fetchRules();\r\n  }, []);\r\n\r\n  return (\r\n    <ul>\r\n      {rules.map((rule) => (\r\n        <li key={rule.id}>\r\n          <strong>{rule.name}</strong>: {rule.description}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RuleList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAAC,CAAC;QACrCM,QAAQ,CAACE,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,EACGN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdX,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,EAASE,IAAI,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,MAAE,EAACL,IAAI,CAACM,WAAW;IAAA,GADxCN,IAAI,CAACO,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACd,EAAA,CAxBID,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}